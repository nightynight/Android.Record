{
  "name": "Android.record",
  "tagline": "",
  "body": "###本文介绍Android录音功能的使用过程，Demo实现了简单的录音功能\r\nDemo用到的相关权限：\r\n```\r\n<uses-permission  android:name=\"android.permission.MOUNT_FORMAT_FILESYSTEMS\"/>\r\n<uses-permission  android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\"/>\r\n<uses-permission  android:name=\"android.permission.RECORD_AUDIO\"/>\r\n```\r\n布局文件很简单，两个按钮，分别控制开始录音和结束录音。\r\nMainActivity也很简单，给两个按钮设置监听器，并发送Intent，具体操作都放到Service中。\r\n要想录音，我们需要一个文件，把录音的内容写入该文件：\r\n```\r\nFile recAudioFile= new File(Environment.getExternalStorageDirectory(), \"test.amr\");\r\n```\r\n这里我放在外部存储中，文件名为test.amr。现在我们可以开始录音了，以下为开始录音的代码：\r\n```\r\nprivate void startRecorder() {\r\n    mMediaRecorder = new MediaRecorder();//实例化录音媒体对象，要通过该对象进行具体录音操作\r\n    if (recAudioFile.exists()) {\r\n        recAudioFile.delete();//这里为了方便，如果文件存在就删除\r\n    }\r\n    mMediaRecorder.setAudioSource(MediaRecorder.AudioSource.MIC);// 从麦克风源进行录音\r\n    mMediaRecorder.setOutputFormat(MediaRecorder.OutputFormat.DEFAULT);// 设置输出格式\r\n    mMediaRecorder.setAudioEncoder(MediaRecorder.AudioEncoder.DEFAULT);// 设置编码格式\r\n    mMediaRecorder.setOutputFile(recAudioFile.getAbsolutePath());// 设置写入录音的文件\r\n    try {\r\n        mMediaRecorder.prepare();//准备录音\r\n    } catch (IllegalStateException e) {\r\n        e.printStackTrace();\r\n    } catch (IOException e) {\r\n        e.printStackTrace();\r\n    }\r\n    mMediaRecorder.start();//开始录音\r\n}\r\n```\r\n再来看看结束录音的代码：\r\n```\r\nprivate void stopRecorder(){\r\n    if (recAudioFile!=null) {\r\n        mMediaRecorder.stop();//结束录音\r\n        mMediaRecorder.release();//释放资源\r\n    }\r\n}\r\n```\r\n到此就实现了录音功能的实现，运行程序，然后在手机的文件管理器中就可以找到该录音文件，点击可以播放。\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}